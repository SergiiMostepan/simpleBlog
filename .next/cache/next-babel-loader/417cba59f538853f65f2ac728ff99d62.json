{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport * as types from \"./types\";\nexport const postsReducer = (state = [], {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case types.GETCONTACTSSTART:\n      return [...state];\n\n    case types.GETCONTACTSSUCSESS:\n      return [...payload];\n\n    case types.POSTCONTACTSSTART:\n      return [...state];\n\n    case types.POSTCONTACTSSUCSESS:\n      return [...state, payload];\n\n    case types.DELETECONTACTSSTART:\n      return [...state];\n\n    case types.DELETECONTACTSSUCSESS:\n      return state.filter(post => post.id !== payload);\n\n    default:\n      return state;\n  }\n}; // COMBINED REDUCERS\n\nconst reducers = {\n  posts: postsReducer\n};\nexport const combineReducer = combineReducers(reducers);","map":{"version":3,"sources":["/Users/applestock/Desktop/IT/Собесы/Blog/newRepo/simpleBlog/reducers.tsx"],"names":["combineReducers","types","postsReducer","state","type","payload","GETCONTACTSSTART","GETCONTACTSSUCSESS","POSTCONTACTSSTART","POSTCONTACTSSUCSESS","DELETECONTACTSSTART","DELETECONTACTSSUCSESS","filter","post","id","reducers","posts","combineReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAG,EAAT,EAAa;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,KAAwC;AAClE,UAAQD,IAAR;AACE,SAAKH,KAAK,CAACK,gBAAX;AACE,aAAO,CAAC,GAAGH,KAAJ,CAAP;;AACF,SAAKF,KAAK,CAACM,kBAAX;AACE,aAAO,CAAC,GAAGF,OAAJ,CAAP;;AAEF,SAAKJ,KAAK,CAACO,iBAAX;AACE,aAAO,CAAC,GAAGL,KAAJ,CAAP;;AAEF,SAAKF,KAAK,CAACQ,mBAAX;AACE,aAAO,CAAC,GAAGN,KAAJ,EAAWE,OAAX,CAAP;;AAEF,SAAKJ,KAAK,CAACS,mBAAX;AACE,aAAO,CAAC,GAAGP,KAAJ,CAAP;;AAEF,SAAKF,KAAK,CAACU,qBAAX;AACE,aAAOR,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAeA,IAAI,CAACC,EAAL,KAAYT,OAAxC,CAAP;;AAEF;AACE,aAAOF,KAAP;AAnBJ;AAqBD,CAtBM,C,CAwBP;;AACA,MAAMY,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAEd;AADQ,CAAjB;AAGA,OAAO,MAAMe,cAAc,GAAGjB,eAAe,CAACe,QAAD,CAAtC","sourcesContent":["import { combineReducers } from \"redux\";\nimport * as types from \"./types\";\n\nexport const postsReducer = (state = [], { type, payload }: any) => {\n  switch (type) {\n    case types.GETCONTACTSSTART:\n      return [...state];\n    case types.GETCONTACTSSUCSESS:\n      return [...payload];\n\n    case types.POSTCONTACTSSTART:\n      return [...state];\n\n    case types.POSTCONTACTSSUCSESS:\n      return [...state, payload];\n\n    case types.DELETECONTACTSSTART:\n      return [...state];\n\n    case types.DELETECONTACTSSUCSESS:\n      return state.filter((post: any) => post.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\n// COMBINED REDUCERS\nconst reducers = {\n  posts: postsReducer,\n};\nexport const combineReducer = combineReducers(reducers);\n"]},"metadata":{},"sourceType":"module"}