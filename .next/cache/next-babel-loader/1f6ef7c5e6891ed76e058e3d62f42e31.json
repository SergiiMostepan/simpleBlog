{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from \"redux\";\nimport * as types from \"./types\";\nexport var postsReducer = function postsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case types.GETCONTACTSSTART:\n      return _toConsumableArray(state);\n\n    case types.GETCONTACTSSUCSESS:\n      return _toConsumableArray(payload);\n\n    case types.POSTCONTACTSSTART:\n      return _toConsumableArray(state);\n\n    case types.POSTCONTACTSSUCSESS:\n      return [].concat(_toConsumableArray(state), [payload]);\n\n    case types.DELETECONTACTSSTART:\n      return _toConsumableArray(state);\n\n    case types.DELETECONTACTSSUCSESS:\n      return state.filter(function (post) {\n        return post.id !== payload;\n      });\n\n    default:\n      return state;\n  }\n}; // COMBINED REDUCERS\n\nvar reducers = {\n  posts: postsReducer\n};\nexport var combineReducer = combineReducers(reducers);","map":null,"metadata":{},"sourceType":"module"}