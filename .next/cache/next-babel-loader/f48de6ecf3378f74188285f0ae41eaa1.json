{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from \"redux\";\nimport * as types from \"./types\";\nexport var postsReducer = function postsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case types.GETCONTACTSSTART:\n      return _toConsumableArray(state);\n\n    case types.GETCONTACTSSUCSESS:\n      return _toConsumableArray(payload);\n\n    case types.POSTCONTACTSSTART:\n      return _toConsumableArray(state);\n\n    case types.POSTCONTACTSSUCSESS:\n      return [].concat(_toConsumableArray(state), [payload]);\n\n    case types.DELETECONTACTSSTART:\n      return _toConsumableArray(state);\n\n    case types.DELETECONTACTSSUCSESS:\n      return state.filter(function (post) {\n        return post.id !== payload;\n      });\n\n    default:\n      return state;\n  }\n}; // COMBINED REDUCERS\n\nvar reducers = {\n  posts: postsReducer\n};\nexport var combineReducer = combineReducers(reducers);","map":{"version":3,"sources":["/Users/applestock/Desktop/IT/Собесы/Blog/newRepo/simpleBlog/reducers.tsx"],"names":["combineReducers","types","postsReducer","state","type","payload","GETCONTACTSSTART","GETCONTACTSSUCSESS","POSTCONTACTSSTART","POSTCONTACTSSUCSESS","DELETECONTACTSSTART","DELETECONTACTSSUCSESS","filter","post","id","reducers","posts","combineReducer"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAwC;AAAA,MAAvCC,KAAuC,uEAA/B,EAA+B;;AAAA;AAAA,MAAzBC,IAAyB,QAAzBA,IAAyB;AAAA,MAAnBC,OAAmB,QAAnBA,OAAmB;;AAClE,UAAQD,IAAR;AACE,SAAKH,KAAK,CAACK,gBAAX;AACE,gCAAWH,KAAX;;AACF,SAAKF,KAAK,CAACM,kBAAX;AACE,gCAAWF,OAAX;;AAEF,SAAKJ,KAAK,CAACO,iBAAX;AACE,gCAAWL,KAAX;;AAEF,SAAKF,KAAK,CAACQ,mBAAX;AACE,0CAAWN,KAAX,IAAkBE,OAAlB;;AAEF,SAAKJ,KAAK,CAACS,mBAAX;AACE,gCAAWP,KAAX;;AAEF,SAAKF,KAAK,CAACU,qBAAX;AACE,aAAOR,KAAK,CAACS,MAAN,CAAa,UAACC,IAAD;AAAA,eAAeA,IAAI,CAACC,EAAL,KAAYT,OAA3B;AAAA,OAAb,CAAP;;AAEF;AACE,aAAOF,KAAP;AAnBJ;AAqBD,CAtBM,C,CAwBP;;AACA,IAAMY,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAEd;AADQ,CAAjB;AAGA,OAAO,IAAMe,cAAc,GAAGjB,eAAe,CAACe,QAAD,CAAtC","sourcesContent":["import { combineReducers } from \"redux\";\nimport * as types from \"./types\";\n\nexport const postsReducer = (state = [], { type, payload }: any) => {\n  switch (type) {\n    case types.GETCONTACTSSTART:\n      return [...state];\n    case types.GETCONTACTSSUCSESS:\n      return [...payload];\n\n    case types.POSTCONTACTSSTART:\n      return [...state];\n\n    case types.POSTCONTACTSSUCSESS:\n      return [...state, payload];\n\n    case types.DELETECONTACTSSTART:\n      return [...state];\n\n    case types.DELETECONTACTSSUCSESS:\n      return state.filter((post: any) => post.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\n// COMBINED REDUCERS\nconst reducers = {\n  posts: postsReducer,\n};\nexport const combineReducer = combineReducers(reducers);\n"]},"metadata":{},"sourceType":"module"}